networks:
  astral-net:
    driver: bridge

services:
  astral-service:
    container_name: astral-service
    build:
      context: .
      dockerfile: ./Dockerfile
    image: astral-service
    env_file:
      - config/config.env
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - astral-net

  postgres:
    image: postgres:17.5
    container_name: postgres
    env_file:
      - config/config.env
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: sh -c "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DATABASE}"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - astral-net

  redis:
    image: redis:8.0
    container_name: redis
    env_file:
      - config/config.env
    command: sh -c "redis-server --requirepass $${REDIS_PASSWORD}"
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: sh -c  "redis-cli -a $${REDIS_PASSWORD} -p $${REDIS_PORT} ping | grep PONG"
      timeout: 3s
      retries: 5
    networks:
      - astral-net