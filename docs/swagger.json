{
    "swagger": "2.0",
    "info": {
        "description": "API for user registration, authentication and document upload.",
        "title": "Astral Authentication \u0026 Documents API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/auth": {
            "post": {
                "description": "Validate user credentials and return generated token. Token is stored server-side (redis) as hashed value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user and return token",
                "parameters": [
                    {
                        "description": "User credentials (login + password)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns generated token in response",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "401": {
                        "description": "User not found or invalid password",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "500": {
                        "description": "Server error (DB/Redis/Token generation)",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    }
                }
            }
        },
        "/api/docs": {
            "post": {
                "description": "Upload a document (file or JSON). The request is multipart/form-data.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "Upload or create a document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JSON string with metadata. Example: {\\",
                        "name": "meta",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload (required if meta.file is true)",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Optional JSON payload (when not uploading a binary file)",
                        "name": "json",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns document JSON (if any) and file name",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid form data / missing meta / missing file",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "500": {
                        "description": "Server error (DB/Redis/IO)",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user. This endpoint is protected by an admin token middleware.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User credentials (login + password)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns created login",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error or duplicate login",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.mainResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Data": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                },
                "json": {}
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "api.User": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "pswd": {
                    "type": "string"
                }
            }
        },
        "api.mainResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.Data"
                },
                "error": {
                    "$ref": "#/definitions/api.ErrorResponse"
                },
                "response": {
                    "$ref": "#/definitions/api.Response"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}